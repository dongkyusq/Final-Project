export type CodeCategoryType = {
  id: number;
  name: string;
  image: string;
};

export type DummyDataType = {
  id: number;
  category: string;
  title: string;
  content: string;
  nickname: string;
  date: string;
  codeCategory: CodeCategoryType;
};

export const CodeCategoryData = [
    {
      id: 1,
      name: "HTML/CSS",
      image: "https://via.placeholder.com/150?text=HTML/CSS"
    },
    {
      id: 2,
      name: "JavaScript",
      image: "https://via.placeholder.com/150?text=JavaScript"
    },
    {
      id: 3,
      name: "Java",
      image: "https://via.placeholder.com/150?text=Java"
    },
    {
      id: 4,
      name: "Python",
      image: "https://via.placeholder.com/150?text=Python"
    },
    {
      id: 5,
      name: "C/C++/C#",
      image: "https://via.placeholder.com/150?text=C/C++/C#"
    },
    {
      id: 6,
      name: "TypeScript",
      image: "https://via.placeholder.com/150?text=TypeScript"
    },
    {
      id: 7,
      name: "React",
      image: "https://via.placeholder.com/150?text=React"
    },
    {
      id: 8,
      name: "Android/iOS",
      image: "https://via.placeholder.com/150?text=Android/iOS"
    },
    {
      id: 9,
      name: "Next.js",
      image: "https://via.placeholder.com/150?text=Next.js"
    },
    {
      id: 10,
      name: "Git/GitHub",
      image: "https://via.placeholder.com/150?text=Git/GitHub"
    }
  ];

//qna , insight 메인페이지 더미데이터 

export const qnaData = [
    { id: 1, title: "QnA 질문 1", date: "2024.07.19" },
    { id: 2, title: "QnA 질문 2", date: "2024.07.19" },
    { id: 3, title: "QnA 질문 3", date: "2024.07.19" },
    { id: 4, title: "QnA 질문 4", date: "2024.07.19" },
    { id: 5, title: "QnA 질문 5", date: "2024.07.19" },
    { id: 6, title: "QnA 질문 6", date: "2024.07.19" },
    { id: 7, title: "QnA 질문 7", date: "2024.07.19" },
    { id: 8, title: "QnA 질문 8", date: "2024.07.19" },
    { id: 9, title: "QnA 질문 9", date: "2024.07.19" },
    { id: 10, title: "QnA 질문 10", date: "2024.07.19" },
    { id: 11, title: "QnA 질문 11", date: "2024.07.19" },
    { id: 12, title: "QnA 질문 12", date: "2024.07.19" }
  ];
  
  export const insightData = [
    { id: 1, title: "인사이트 글 1", date: "2024.07.19" },
    { id: 2, title: "인사이트 글 2", date: "2024.07.19" },
    { id: 3, title: "인사이트 글 3", date: "2024.07.19" },
    { id: 4, title: "인사이트 글 4", date: "2024.07.19" },
    { id: 5, title: "인사이트 글 5", date: "2024.07.19" },
    { id: 6, title: "인사이트 글 6", date: "2024.07.19" },
    { id: 7, title: "인사이트 글 7", date: "2024.07.19" },
    { id: 8, title: "인사이트 글 8", date: "2024.07.19" },
    { id: 9, title: "인사이트 글 9", date: "2024.07.19" },
    { id: 10, title: "인사이트 글 10", date: "2024.07.19" },
    { id: 11, title: "인사이트 글 11", date: "2024.07.19" },
    { id: 12, title: "인사이트 글 12", date: "2024.07.19" }
  ];
  
  //전문가 더미데이터

  export const expertData = [
    {
      id: 1,
      image: "https://via.placeholder.com/150?text=Expert+1",
      title: "HTML/CSS 전문가",
      price: "₩100,000",
      language: "HTML/CSS",
    },
    {
      id: 2,
      image: "https://via.placeholder.com/150?text=Expert+2",
      title: "JavaScript 전문가",
      price: "₩150,000",
      language: "JavaScript",
    },
    {
      id: 3,
      image: "https://via.placeholder.com/150?text=Expert+3",
      title: "Java 전문가",
      price: "₩120,000",
      language: "Java",
    },
    {
      id: 4,
      image: "https://via.placeholder.com/150?text=Expert+4",
      title: "Python 전문가",
      price: "₩130,000",
      language: "Python",
    },
    {
      id: 5,
      image: "https://via.placeholder.com/150?text=Expert+5",
      title: "C/C++/C# 전문가",
      price: "₩140,000",
      language: "C/C++/C#",
    },
    {
      id: 6,
      image: "https://via.placeholder.com/150?text=Expert+6",
      title: "TypeScript 전문가",
      price: "₩110,000",
      language: "TypeScript",
    },
    {
      id: 7,
      image: "https://via.placeholder.com/150?text=Expert+7",
      title: "React 전문가",
      price: "₩160,000",
      language: "React",
    },
    {
      id: 8,
      image: "https://via.placeholder.com/150?text=Expert+8",
      title: "Android/iOS 전문가",
      price: "₩170,000",
      language: "Android/iOS",
    },
    {
      id: 9,
      image: "https://via.placeholder.com/150?text=Expert+9",
      title: "Next.js 전문가",
      price: "₩180,000",
      language: "Next.js",
    },
    {
      id: 10,
      image: "https://via.placeholder.com/150?text=Expert+10",
      title: "Git/GitHub 전문가",
      price: "₩190,000",
      language: "Git/GitHub",
    },
    {
      id: 11,
      image: "https://via.placeholder.com/150?text=Expert+11",
      title: "HTML/CSS 전문가",
      price: "₩100,000",
      language: "HTML/CSS",
    },
    {
      id: 12,
      image: "https://via.placeholder.com/150?text=Expert+12",
      title: "JavaScript 전문가",
      price: "₩150,000",
      language: "JavaScript",
    }
  ];
  
const categories = ['Q&A', '인사이트', '전문가 의뢰'];

function svgToBase64(svg:any) {
  return 'data:image/svg+xml;base64,' + btoa(svg);
}
const htmlCssSVG = `
<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_826_8007)">
<path d="M-2.18557e-06 50C-9.78513e-07 77.6142 22.3858 100 50 100L50 -2.18557e-06C22.3858 -9.78513e-07 -3.39263e-06 22.3858 -2.18557e-06 50Z" fill="#E44D26"/>
<path d="M27.043 106.24H50.4477V-8.72388H27.043V106.24Z" fill="#F16529"/>
<path d="M100 50C100 77.6142 77.6142 100 50 100L50 -2.18557e-06C77.6142 -9.78513e-07 100 22.3858 100 50Z" fill="#33A9DC"/>
<path d="M73.4844 106.24H49.9999V-8.72388H73.4844V106.24Z" fill="#1572B6"/>
<path d="M27.0682 44.2124H17.5828L16.9276 36.8718H27.0682V29.7041H9.09375L9.26562 31.627L11.0271 51.3807H27.0682V44.2124ZM27.0682 62.8286L27.0365 62.8374L19.0536 60.6812L18.5437 54.965H11.3474L12.3516 66.2197L27.0354 70.2958L27.0682 70.2869V62.8286Z" fill="#EBEBEB"/>
<path d="M27.043 44.2124V51.3807H35.8695L35.0378 60.677L27.043 62.8348V70.2926L41.7383 66.2197L41.8461 65.0088L43.5305 46.1374L43.705 44.2124H41.7737H27.043ZM27.043 29.7041V36.8718H44.3576L44.5013 35.2614L44.8284 31.627L44.9997 29.7041H27.043Z" fill="white"/>
<path d="M73.4921 29.5V36.7036H56.0921L55.9478 35.0849L55.6197 31.4328L55.4473 29.5H73.4921ZM73.4676 44.0812V51.2849H65.5462L65.402 49.6661L65.0733 46.0141L64.9014 44.0812H73.4676Z" fill="#EBEBEB"/>
<path d="M82.3865 50.9795L81.5187 60.6264L73.4844 62.7951V70.2899L88.2521 66.1972L88.3604 64.98L89.6135 50.9795H82.3865Z" fill="white"/>
<path d="M73.5083 62.7888L73.4766 62.7982L65.4542 60.632L64.9411 54.8867H57.7109L58.7198 66.1977L73.4755 70.293L73.5083 70.2836V62.7888Z" fill="#EBEBEB"/>
<path d="M73.4668 44.0802H82.9991L83.6574 36.7036H73.4668V29.5H91.5303L91.3574 31.4328L89.5866 51.2839H73.4668V44.0802Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_826_8007">
<rect width="100" height="100" rx="50" fill="white"/>
</clipPath>
</defs>
</svg>
`;
const javascriptSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" rx="50" fill="#F7DF1E"/>
<g clip-path="url(#clip0_826_5191)">
<path d="M23.0909 8.3335H76.9104C78.8488 8.33163 80.7685 8.72184 82.5598 9.48179C84.351 10.2418 85.9785 11.3565 87.3492 12.7624C88.7198 14.1682 89.8068 15.8374 90.5477 17.6746C91.2887 19.5117 91.6691 21.4807 91.6673 23.4688V76.5315C91.6691 78.5196 91.2887 80.4886 90.5477 82.3258C89.8068 84.1629 88.7198 85.8322 87.3492 87.238C85.9785 88.6438 84.351 89.7586 82.5598 90.5185C80.7685 91.2785 78.8488 91.6687 76.9104 91.6668H23.0909C21.1525 91.6687 19.2328 91.2785 17.4415 90.5185C15.6503 89.7586 14.0228 88.6438 12.6521 87.238C11.2815 85.8322 10.1945 84.1629 9.45358 82.3258C8.71262 80.4886 8.33216 78.5196 8.33399 76.5315V23.4688C8.33216 21.4807 8.71262 19.5117 9.45358 17.6746C10.1945 15.8374 11.2815 14.1682 12.6521 12.7624C14.0228 11.3565 15.6503 10.2418 17.4415 9.48179C19.2328 8.72184 21.1525 8.33163 23.0909 8.3335Z" fill="#F7DF1E"/>
<path d="M64.455 73.5384C66.1336 76.2791 68.3174 78.2937 72.1799 78.2937C75.4246 78.2937 77.4973 76.672 77.4973 74.4312C77.4973 71.746 75.3677 70.795 71.7963 69.2328L69.8386 68.3929C64.1878 65.9854 60.4338 62.9696 60.4338 56.5939C60.4338 50.7209 64.9087 46.25 71.9021 46.25C76.8809 46.25 80.4603 47.9828 83.0397 52.5198L76.9418 56.4352C75.5992 54.0278 74.1508 53.0794 71.9021 53.0794C69.6084 53.0794 68.1547 54.5344 68.1547 56.4352C68.1547 58.7844 69.6098 59.7354 72.9696 61.1905L74.9272 62.0291C81.5807 64.8823 85.3373 67.791 85.3373 74.3307C85.3373 81.381 79.7989 85.2434 72.3611 85.2434C65.0886 85.2434 60.3902 81.7778 58.0912 77.2355L64.455 73.5384ZM36.7923 74.2169C38.0225 76.3995 39.1415 78.2447 41.832 78.2447C44.4047 78.2447 46.0278 77.2381 46.0278 73.3241V46.6971H53.8584V73.4299C53.8584 81.5384 49.1045 85.2288 42.1653 85.2288C35.8955 85.2288 32.2645 81.9841 30.418 78.0761L36.7923 74.2169Z" fill="black"/>
</g>
<defs>
<clipPath id="clip0_826_5191">
<rect width="83.3333" height="83.3333" fill="white" transform="translate(8.33398 8.3335)"/>
</clipPath>
</defs>
</svg>
`
const javaSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" rx="50" fill="#F0F0F0"/>
<g clip-path="url(#clip0_826_3960)">
<path d="M23.0909 8.3335H76.9104C78.8488 8.33163 80.7685 8.72184 82.5598 9.48179C84.351 10.2418 85.9785 11.3565 87.3492 12.7624C88.7198 14.1682 89.8068 15.8374 90.5477 17.6746C91.2887 19.5117 91.6692 21.4807 91.6673 23.4688V76.5315C91.6692 78.5196 91.2887 80.4886 90.5477 82.3258C89.8068 84.1629 88.7198 85.8322 87.3492 87.238C85.9785 88.6438 84.351 89.7586 82.5598 90.5185C80.7685 91.2785 78.8488 91.6687 76.9104 91.6668H23.0909C21.1525 91.6687 19.2328 91.2785 17.4415 90.5185C15.6503 89.7586 14.0228 88.6438 12.6521 87.238C11.2815 85.8322 10.1945 84.1629 9.45358 82.3258C8.71262 80.4886 8.33216 78.5196 8.33399 76.5315V23.4688C8.33216 21.4807 8.71262 19.5117 9.45358 17.6746C10.1945 15.8374 11.2815 14.1682 12.6521 12.7624C14.0228 11.3565 15.6503 10.2418 17.4415 9.48179C19.2328 8.72184 21.1525 8.33163 23.0909 8.3335Z" fill="#F0F0F0"/>
<path d="M42.3125 65.5649C42.3125 65.5649 40.1326 66.8327 43.8639 67.2617C48.3844 67.7774 50.6948 67.7034 55.6763 66.7606C55.6763 66.7606 56.986 67.5818 58.8151 68.2931C47.6477 73.0792 33.5412 68.0158 42.3125 65.5649Z" fill="#5382A1"/>
<path d="M40.9453 59.3193C40.9453 59.3193 38.5002 61.1292 42.2344 61.5154C47.0633 62.0136 50.8767 62.0544 57.4755 60.7837C57.4755 60.7837 58.3882 61.709 59.8234 62.215C46.3214 66.1632 31.2826 62.5264 40.9453 59.3193Z" fill="#5382A1"/>
<path d="M52.4496 48.7247C55.2013 51.8927 51.7267 54.7435 51.7267 54.7435C51.7267 54.7435 58.7135 51.1367 55.5048 46.6201C52.5079 42.4081 50.2097 40.3153 62.6512 33.0996C62.6512 33.0996 43.1221 37.9771 52.4496 48.7247Z" fill="#E76F00"/>
<path d="M67.2208 70.1841C67.2208 70.1841 68.834 71.5134 65.4441 72.5417C58.9982 74.4944 38.6154 75.0841 32.9531 72.6195C30.9177 71.734 34.7347 70.5052 35.9354 70.2473C37.1876 69.9758 37.9032 70.0264 37.9032 70.0264C35.6395 68.4318 23.2721 73.1575 31.6211 74.5109C54.3901 78.2033 73.1267 72.8481 67.2208 70.1841Z" fill="#5382A1"/>
<path d="M43.3588 52.8482C43.3588 52.8482 32.9908 55.3107 39.6872 56.205C42.5147 56.5835 48.1511 56.4979 53.4013 56.058C57.692 55.696 62.0004 54.9265 62.0004 54.9265C62.0004 54.9265 60.4875 55.5744 59.3929 56.3218C48.8644 59.0908 28.5252 57.8027 34.3806 54.9703C39.3325 52.5766 43.3588 52.8482 43.3588 52.8482Z" fill="#5382A1"/>
<path d="M61.9573 63.2441C72.66 57.6826 67.7115 52.338 64.2575 53.058C63.4109 53.2342 63.0334 53.3869 63.0334 53.3869C63.0334 53.3869 63.3477 52.8946 63.948 52.6815C70.7811 50.2792 76.0362 59.7668 61.7422 63.5244C61.7422 63.5246 61.9078 63.3765 61.9573 63.2441Z" fill="#5382A1"/>
<path d="M55.507 21.4482C55.507 21.4482 61.4343 27.3776 49.8852 36.4952C40.6239 43.8091 47.7733 47.9793 49.8813 52.744C44.4754 47.8665 40.5082 43.5728 43.1697 39.5767C47.0762 33.7107 57.8985 30.8666 55.507 21.4482Z" fill="#E76F00"/>
<path d="M44.4127 78.3148C54.686 78.9724 70.4617 77.9499 70.8354 73.0889C70.8354 73.0889 70.1172 74.9316 62.3451 76.3951C53.5766 78.0452 42.7619 77.8526 36.3477 76.795C36.3478 76.7949 37.6607 77.8818 44.4127 78.3148Z" fill="#5382A1"/>
</g>
<defs>
<clipPath id="clip0_826_3960">
<rect width="83.3333" height="83.3333" fill="white" transform="translate(8.33398 8.3335)"/>
</clipPath>
</defs>
</svg>
`
const pythonSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" rx="50" fill="#000B1D"/>
<g clip-path="url(#clip0_826_6605)">
<path d="M23.0909 8.3335H76.9104C78.8488 8.33163 80.7685 8.72184 82.5598 9.48179C84.351 10.2418 85.9785 11.3565 87.3492 12.7624C88.7198 14.1682 89.8068 15.8374 90.5477 17.6746C91.2887 19.5117 91.6692 21.4807 91.6673 23.4688V76.5315C91.6692 78.5196 91.2887 80.4886 90.5477 82.3258C89.8068 84.1629 88.7198 85.8322 87.3492 87.238C85.9785 88.6438 84.351 89.7586 82.5598 90.5185C80.7685 91.2785 78.8488 91.6687 76.9104 91.6668H23.0909C21.1525 91.6687 19.2328 91.2785 17.4415 90.5185C15.6503 89.7586 14.0228 88.6438 12.6521 87.238C11.2815 85.8322 10.1945 84.1629 9.45358 82.3258C8.71262 80.4886 8.33216 78.5196 8.33399 76.5315V23.4688C8.33216 21.4807 8.71262 19.5117 9.45358 17.6746C10.1945 15.8374 11.2815 14.1682 12.6521 12.7624C14.0228 11.3565 15.6503 10.2418 17.4415 9.48179C19.2328 8.72184 21.1525 8.33163 23.0909 8.3335Z" fill="#000B1D"/>
<path d="M49.883 22.0833C35.4385 22.0833 36.3405 28.3472 36.3405 28.3472L36.3566 34.8367H50.1406V36.7851H30.8817C30.8817 36.7851 21.6387 35.7369 21.6387 50.3115C21.6387 64.886 29.7062 64.3692 29.7062 64.3692H34.5209V57.606C34.5209 57.606 34.2614 49.5385 42.4596 49.5385C50.6578 49.5385 56.1309 49.5385 56.1309 49.5385C56.1309 49.5385 63.8119 49.6627 63.8119 42.1151C63.8119 34.5676 63.8119 29.6355 63.8119 29.6355C63.8119 29.6355 64.9781 22.0833 49.883 22.0833ZM42.2825 26.4471C43.6539 26.4471 44.7623 27.5555 44.7623 28.9269C44.7623 30.2983 43.6539 31.4068 42.2825 31.4068C40.9111 31.4068 39.8026 30.2983 39.8026 28.9269C39.8026 27.5555 40.9111 26.4471 42.2825 26.4471Z" fill="url(#paint0_linear_826_6605)"/>
<path d="M50.2936 78.6854C64.738 78.6854 63.836 72.4214 63.836 72.4214L63.8199 65.932H50.0359V63.9836H69.2949C69.2949 63.9836 78.5379 65.0318 78.5379 50.4572C78.5379 35.8826 70.4704 36.3995 70.4704 36.3995H65.6556V43.1627C65.6556 43.1627 65.9152 51.2302 57.7169 51.2302C49.5187 51.2302 44.0457 51.2302 44.0457 51.2302C44.0457 51.2302 36.3646 51.106 36.3646 58.6536C36.3646 66.2011 36.3646 71.1332 36.3646 71.1332C36.3646 71.1332 35.1984 78.6854 50.2936 78.6854ZM57.8941 74.3216C56.5227 74.3216 55.4142 73.2132 55.4142 71.8417C55.4142 70.4703 56.5227 69.3619 57.8941 69.3619C59.2655 69.3619 60.3739 70.4703 60.3739 71.8417C60.3739 73.2132 59.2655 74.3216 57.8941 74.3216Z" fill="url(#paint1_linear_826_6605)"/>
</g>
<defs>
<linearGradient id="paint0_linear_826_6605" x1="27.1068" y1="27.0308" x2="55.2416" y2="55.2597" gradientUnits="userSpaceOnUse">
<stop stop-color="#387EB8"/>
<stop offset="1" stop-color="#366994"/>
</linearGradient>
<linearGradient id="paint1_linear_826_6605" x1="44.4144" y1="44.9884" x2="74.6313" y2="73.9377" gradientUnits="userSpaceOnUse">
<stop stop-color="#FFE052"/>
<stop offset="1" stop-color="#FFC331"/>
</linearGradient>
<clipPath id="clip0_826_6605">
<rect width="83.3333" height="83.3333" fill="white" transform="translate(8.33398 8.3335)"/>
</clipPath>
</defs>
</svg>
`
const cSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_826_3549)">
<rect width="100" height="100" rx="50" fill="#03599C"/>
<path d="M-1.87614 80.4164L95.795 23.5953L91.8735 -30.2383L43.7443 -15.978L10.2321 -0.64794L-9.37609 26.8035L-12.9414 56.0376L-1.87614 80.4164Z" fill="#659AD3"/>
<path d="M83.4616 28.3203L52.0163 10.2214C51.4954 9.89583 50.7793 9.76562 49.998 9.76562C49.2168 9.76562 48.5006 9.96094 47.9798 10.2214L16.7298 28.3854C15.623 29.0365 14.8418 30.6641 14.8418 31.901V68.1641C14.8418 68.8802 14.972 69.7266 15.4928 70.4427L85.0241 30.0781C84.6335 29.2969 84.0475 28.7109 83.4616 28.3203Z" fill="#659AD3"/>
<path d="M15.2988 70.3775C15.6243 70.8984 16.0801 71.3541 16.5358 71.6145L47.916 89.7786C48.4368 90.1041 49.153 90.2343 49.9342 90.2343C50.7155 90.2343 51.4316 90.039 51.9525 89.7786L83.2025 71.6145C84.3092 70.9635 85.0905 69.3359 85.0905 68.0989V31.8359C85.0905 31.2499 85.0254 30.5989 84.6999 30.0129L15.2988 70.3775Z" fill="#03599C"/>
<path d="M63.8665 57.8774C61.1322 62.6951 55.9238 65.9504 49.9993 65.9504C41.2103 65.9504 34.0488 58.7889 34.0488 49.9998C34.0488 41.2108 41.2103 34.0493 49.9993 34.0493C55.9238 34.0493 61.1322 37.3045 63.8665 42.1873L72.3301 37.3045C67.903 29.5571 59.5697 24.2837 49.9993 24.2837C35.8066 24.2837 24.2832 35.8071 24.2832 49.9998C24.2832 64.1925 35.8066 75.716 49.9993 75.716C59.5046 75.716 67.8379 70.5076 72.265 62.8254L63.8665 57.8774Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_826_3549">
<rect width="100" height="100" rx="50" fill="white"/>
</clipPath>
</defs>
</svg>`
const typescriptSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" rx="50" fill="#007ACC"/>
<path d="M23.0918 38.9321H87.9811V86.8944H23.0918V38.9321Z" fill="white"/>
<path d="M9.30859 49.9413V90.6314H90.6888V9.25122H9.30859V49.9413ZM74.888 46.6861C76.8372 47.1384 78.6087 48.1579 79.9792 49.6158C80.7336 50.4012 81.3895 51.2758 81.9323 52.22C81.9323 52.3241 78.4167 54.7004 76.2747 56.0286C76.1966 56.0806 75.8841 55.7421 75.5391 55.2278C75.148 54.5531 74.5925 53.9884 73.9242 53.5866C73.2559 53.1847 72.4967 52.9587 71.7174 52.9296C69.25 52.7603 67.6615 54.0559 67.6745 56.1848C67.6541 56.7149 67.7754 57.2407 68.026 57.7082C68.5664 58.8345 69.5755 59.5051 72.7396 60.8723C78.5664 63.3788 81.0599 65.0325 82.6094 67.3827C84.3411 69.9869 84.7253 74.1926 83.5534 77.3046C82.2513 80.69 79.0612 82.9882 74.5495 83.7499C72.4888 83.9859 70.4068 83.9641 68.3516 83.6848C65.2016 83.1656 62.3 81.6532 60.0703 79.3684C59.3216 78.5416 57.8633 76.3866 57.9544 76.2304C58.1921 76.0539 58.4423 75.8951 58.7031 75.7551L61.7174 74.0885L64.0547 72.7343L64.543 73.4569C65.367 74.6357 66.4157 75.6402 67.6289 76.4127C70.2331 77.7799 73.7878 77.5911 75.5456 76.009C76.1358 75.4293 76.5039 74.661 76.586 73.8378C76.6681 73.0146 76.4589 72.1887 75.9948 71.5038C75.3437 70.5989 74.0417 69.8372 70.4023 68.2486C66.2031 66.4387 64.3932 65.3189 62.7396 63.5351C61.7072 62.3579 60.9451 60.9691 60.5065 59.4661C60.1794 57.7489 60.131 55.9903 60.3633 54.2577C61.2292 50.2017 64.2695 47.3697 68.7096 46.5299C70.7659 46.2754 72.8488 46.3325 74.888 46.6991V46.6861ZM55.7865 50.0976V53.4309H45.2201V83.5286H37.7266V53.4244H27.1341V50.1692C27.1011 49.0466 27.1272 47.9231 27.2122 46.8033C27.2643 46.7447 33.7227 46.7447 41.5352 46.7447H55.7474L55.7865 50.0976Z" fill="#007ACC"/>
</svg>
`
const reactSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" rx="50" fill="#EAFBFF"/>
<path d="M50 57.4219C54.099 57.4219 57.4219 54.099 57.4219 50C57.4219 45.901 54.099 42.5781 50 42.5781C45.901 42.5781 42.5781 45.901 42.5781 50C42.5781 54.099 45.901 57.4219 50 57.4219Z" fill="#61DAFB"/>
<path d="M78.1895 37.7603C76.7572 37.2395 75.2598 36.7187 73.6973 36.2629C74.0879 34.7004 74.4134 33.1379 74.6738 31.6405C76.041 23.0468 74.5436 16.9921 70.377 14.6484C69.14 13.9322 67.7728 13.6067 66.2103 13.6067C61.653 13.6067 55.8587 16.9921 49.9993 22.6562C44.14 16.9921 38.3457 13.6067 33.7884 13.6067C32.2259 13.6067 30.8587 13.9322 29.6217 14.6484C25.4551 17.0572 23.9577 23.1119 25.3249 31.6405C25.5853 33.1379 25.9108 34.7004 26.3014 36.2629C24.7389 36.7187 23.2415 37.1744 21.8092 37.7603C13.6712 40.8853 9.24414 45.1822 9.24414 49.9999C9.24414 54.8176 13.7363 59.1145 21.8092 62.2395C23.2415 62.7603 24.7389 63.2812 26.3014 63.7369C25.9108 65.2994 25.5853 66.8619 25.3249 68.3593C23.9577 76.953 25.4551 83.0077 29.6217 85.3515C30.8587 86.0676 32.2259 86.3931 33.7884 86.3931C38.4108 86.3931 44.2051 83.0077 49.9993 77.3437C55.8587 83.0077 61.653 86.3931 66.2103 86.3931C67.7728 86.3931 69.14 86.0676 70.377 85.3515C74.5436 82.9426 76.041 76.8879 74.6738 68.3593C74.4134 66.8619 74.0879 65.2994 73.6973 63.7369C75.2598 63.2812 76.7572 62.8254 78.1895 62.2395C86.3275 59.1145 90.7546 54.8176 90.7546 49.9999C90.7546 45.1822 86.3275 40.8853 78.1895 37.7603ZM68.554 17.9036C71.2233 19.4661 72.1348 24.2838 71.028 31.1197C70.8327 32.4869 70.5072 33.9192 70.1165 35.4166C66.7311 34.6353 63.1504 34.1145 59.3744 33.789C57.1608 30.664 54.8822 27.8645 52.6035 25.3254C57.4212 20.5728 62.304 17.3176 66.2754 17.3176C67.1217 17.3176 67.903 17.5129 68.554 17.9036ZM61.2624 56.5103C60.0905 58.5937 58.7233 60.677 57.291 62.7603C54.8822 62.9556 52.4733 63.0207 49.9993 63.0207C47.4603 63.0207 45.0514 62.9556 42.7077 62.7603C41.2754 60.677 39.9733 58.5937 38.8014 56.5103C37.5645 54.3619 36.3926 52.1484 35.3509 49.9999C36.3926 47.8515 37.5645 45.6379 38.8014 43.4895C39.9733 41.4062 41.3405 39.3228 42.7728 37.2395C45.1816 37.0442 47.5905 36.9791 50.0645 36.9791C52.6035 36.9791 55.0124 37.0442 57.3561 37.2395C58.7884 39.3228 60.0905 41.4062 61.2624 43.4895C62.4994 45.6379 63.6712 47.8515 64.7129 49.9999C63.6061 52.1484 62.4994 54.2968 61.2624 56.5103ZM66.666 54.3619C67.6426 56.6405 68.4238 58.8541 69.14 61.0676C66.9264 61.5885 64.5827 61.9791 62.1087 62.3046C62.89 61.0676 63.7363 59.7655 64.4525 58.3984C65.2337 57.0312 65.9499 55.664 66.666 54.3619ZM49.9993 72.0051C48.4368 70.3124 46.9395 68.4895 45.5072 66.6015C47.0046 66.6666 48.502 66.7317 49.9993 66.7317C51.4967 66.7317 52.9941 66.6666 54.4915 66.6015C53.0592 68.4895 51.5618 70.3124 49.9993 72.0051ZM37.89 62.2395C35.416 61.914 33.0723 61.5234 30.8587 61.0025C31.5749 58.8541 32.3561 56.5754 33.3327 54.2968C34.0488 55.5989 34.765 56.9661 35.5462 58.2681C36.3275 59.7004 37.1087 60.9374 37.89 62.2395ZM33.3327 45.6379C32.3561 43.3593 31.5749 41.1458 30.8587 38.9322C33.0723 38.4114 35.416 38.0208 37.89 37.6952C37.1087 38.9322 36.2624 40.2343 35.5462 41.6015C34.765 42.9687 34.0488 44.3359 33.3327 45.6379ZM49.9993 27.9947C51.5618 29.6874 53.0592 31.5103 54.4915 33.3984C52.9941 33.3333 51.4967 33.2681 49.9993 33.2681C48.502 33.2681 47.0046 33.3333 45.5072 33.3984C46.9395 31.5103 48.4368 29.6874 49.9993 27.9947ZM64.4525 41.6666L62.1087 37.7603C64.5827 38.0859 66.9264 38.4765 69.14 38.9973C68.4238 41.1458 67.6426 43.4244 66.666 45.703C65.9499 44.3359 65.2337 42.9687 64.4525 41.6666ZM28.9707 31.1197C27.8639 24.2838 28.7754 19.4661 31.4447 17.9036C32.0957 17.5129 32.877 17.3176 33.7233 17.3176C37.6296 17.3176 42.5124 20.5077 47.3952 25.3254C45.1165 27.7994 42.8379 30.664 40.6243 33.789C36.8483 34.1145 33.2676 34.7004 29.8822 35.4166C29.4915 33.9192 29.2311 32.4869 28.9707 31.1197ZM12.89 49.9999C12.89 46.94 16.6009 43.6848 23.1113 41.276C24.4134 40.7551 25.8457 40.2994 27.278 39.9088C28.3197 43.164 29.6217 46.6145 31.1842 50.065C29.6217 53.5155 28.2546 56.901 27.278 60.1562C18.2936 57.552 12.89 53.6458 12.89 49.9999ZM31.4447 82.0963C28.7754 80.5338 27.8639 75.7161 28.9707 68.8801C29.166 67.5129 29.4915 66.0806 29.8822 64.5833C33.2676 65.3645 36.8483 65.8853 40.6243 66.2109C42.8379 69.3359 45.1165 72.1353 47.3952 74.6744C42.5775 79.427 37.6947 82.6822 33.7233 82.6822C32.877 82.6822 32.0957 82.4869 31.4447 82.0963ZM71.028 68.8801C72.1348 75.7161 71.2233 80.5338 68.554 82.0963C67.903 82.4869 67.1217 82.6822 66.2754 82.6822C62.3691 82.6822 57.4863 79.4921 52.6035 74.6744C54.8822 72.2004 57.1608 69.3359 59.3744 66.2109C63.1504 65.8853 66.7311 65.2994 70.1165 64.5833C70.5072 66.0806 70.7676 67.5129 71.028 68.8801ZM76.8874 58.7239C75.5853 59.2447 74.153 59.7004 72.7207 60.0911C71.679 56.8359 70.377 53.3853 68.8145 49.9348C70.377 46.4843 71.7441 43.0989 72.7207 39.8437C81.7051 42.4478 87.1087 46.3541 87.1087 49.9999C87.1087 53.0598 83.3327 56.315 76.8874 58.7239Z" fill="#61DAFB"/>
</svg>
`
const nextSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_826_6896)">
<rect width="100" height="100" rx="50" fill="white"/>
<path d="M50 0C22.4219 0 0 22.4219 0 50C0 77.5781 22.4219 100 50 100C58.75 100 66.9531 97.7344 74.0625 93.8281L37.8125 43.2031V71.7969H32.5V32.6562H37.8125L77.2656 91.875C90.9375 82.9688 100 67.5781 100 50C100 22.4219 77.5781 0 50 0ZM67.2656 66.0938L61.4062 57.2656V32.6562H67.2656V66.0938Z" fill="black"/>
</g>
<defs>
<clipPath id="clip0_826_6896">
<rect width="100" height="100" rx="50" fill="white"/>
</clipPath>
</defs>
</svg>
`
const gitSVG = `<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_826_4714)">
<path d="M97.4545 45.6078L54.3943 2.54995C51.9162 0.0702637 47.8943 0.0702637 45.4123 2.54995L36.4725 11.4921L47.8147 22.8343C50.4514 21.9445 53.4733 22.5414 55.574 24.6421C56.5752 25.6442 57.2742 26.9078 57.5909 28.2884C57.9077 29.669 57.8296 31.1109 57.3654 32.4492L68.2967 43.382C70.9412 42.4703 73.9936 43.0593 76.1045 45.1749C79.0576 48.1257 79.0576 52.9093 76.1045 55.8617C75.4027 56.5638 74.5695 57.1208 73.6524 57.5008C72.7353 57.8808 71.7523 58.0764 70.7596 58.0764C69.7669 58.0764 68.7839 57.8808 67.8668 57.5008C66.9497 57.1208 66.1164 56.5638 65.4147 55.8617C64.3603 54.8066 63.6415 53.4633 63.3489 52.0007C63.0563 50.5381 63.2028 49.0216 63.7701 47.6421L53.5764 37.4476L53.5748 64.2765C54.3144 64.6407 54.9897 65.1231 55.574 65.7046C58.5264 68.6554 58.5264 73.4374 55.574 76.3945C52.6217 79.3453 47.8365 79.3453 44.8873 76.3945C41.9358 73.4382 41.6936 68.6562 44.6444 65.7046C45.374 64.9757 46.0936 64.4249 46.8748 64.0562V36.9789C46.0936 36.6101 45.3748 36.0632 44.6436 35.3296C42.4084 33.0953 41.9904 29.814 43.1373 27.0671L32.0178 15.8851L2.52248 45.4085C0.0420107 47.8906 0.0576356 51.9124 2.5381 54.3929L45.6053 97.4507C48.0842 99.9304 52.1092 99.9304 54.592 97.4507L97.4514 54.5929C99.9318 52.1117 99.9342 48.0874 97.4545 45.6078Z" fill="#F34F29"/>
</g>
<defs>
<clipPath id="clip0_826_4714">
<rect width="100" height="100" rx="50" fill="white"/>
</clipPath>
</defs>
</svg>
`
const HTMLCSS64SVG = svgToBase64(htmlCssSVG);
const JAVASCRIPTSVG = svgToBase64(javascriptSVG)
const JAVASVG = svgToBase64(javaSVG)
const PYTHONSVG = svgToBase64(pythonSVG)
const CSVG = svgToBase64(cSVG)
const TYPESCRIPTSVG = svgToBase64(typescriptSVG)
const REACTSVG = svgToBase64(reactSVG)
const NEXTJSSVG = svgToBase64(nextSVG)
const GITSVG = svgToBase64(gitSVG)

export const CodeCategories = [
  { id: 1, name: "HTML/CSS", image: HTMLCSS64SVG },
  { id: 2, name: "JavaScript", image: JAVASCRIPTSVG },
  { id: 3, name: "Java", image: JAVASVG},
  { id: 4, name: "Python", image: PYTHONSVG },
  { id: 5, name: "C/C++/C#", image:CSVG },
  { id: 6, name: "TypeScript", image: TYPESCRIPTSVG },
  { id: 7, name: "React", image: REACTSVG },
  { id: 8, name: "Android/IOS", image: "https://via.placeholder.com/150?text=Android/iOS" },
  { id: 9, name: "Next.JS", image: NEXTJSSVG },
  { id: 10, name: "Git/Github", image: GITSVG},
];

const titles = [
  '파이썬 질문', '자바스크립트 오류 해결', 'HTML/CSS 레이아웃 문제', 
  'React 상태 관리', 'Java 메서드 오버로딩', 'Python 데이터 분석', 
  'C++ 메모리 관리', 'TypeScript 타입 정의', 'Node.js 비동기 처리', 
  'Git 충돌 해결', '안드로이드 앱 개발', 'iOS 배포 문제', 
  'Next.js 라우팅', '데이터베이스 설계', 'API 통신 오류', 
  '네트워크 문제 해결', '웹 접근성 향상', 'SEO 최적화', 
  '클라우드 서비스 선택', '보안 문제 해결'
];

const contents = [
  '파이썬에서 리스트 컴프리헨션을 사용할 때 주의해야 할 점은 무엇인가요?',
  '자바스크립트에서 비동기 처리를 할 때 발생하는 오류를 어떻게 해결하나요?',
  'HTML과 CSS를 사용하여 반응형 레이아웃을 구성하는 방법을 알고 싶습니다.',
  'React에서 상태 관리를 효과적으로 할 수 있는 방법은 무엇인가요?',
  'Java에서 메서드 오버로딩을 사용할 때 주의해야 할 점이 있나요?',
  'Python을 사용하여 데이터를 분석할 때 자주 사용하는 라이브러리는 무엇인가요?',
  'C++에서 메모리 관리를 잘하기 위한 팁을 알려주세요.',
  'TypeScript에서 타입을 정의할 때의 좋은 관행은 무엇인가요?',
  'Node.js에서 비동기 처리를 효과적으로 할 수 있는 방법을 알고 싶습니다.',
  'Git을 사용하여 협업할 때 충돌을 해결하는 방법을 알고 싶습니다.',
  '안드로이드 앱을 개발할 때 자주 발생하는 문제와 해결 방법을 알려주세요.',
  'iOS 앱을 배포할 때 발생하는 문제를 어떻게 해결하나요?',
  'Next.js에서 라우팅을 설정할 때 주의해야 할 점이 있나요?',
  '데이터베이스를 설계할 때 고려해야 할 중요한 요소는 무엇인가요?',
  'API 통신 시 발생하는 오류를 어떻게 해결하나요?',
  '네트워크 문제를 진단하고 해결하는 방법을 알고 싶습니다.',
  '웹 접근성을 향상시키기 위한 방법을 알려주세요.',
  'SEO를 최적화하기 위한 방법과 도구를 알고 싶습니다.',
  '클라우드 서비스를 선택할 때 고려해야 할 요소는 무엇인가요?',
  '보안 문제를 예방하고 해결하기 위한 방법을 알고 싶습니다.'
];

const nicknames = [
  '개발자123', '코딩마스터', '프로그래머', '웹디자이너', '풀스택개발자',
  '소프트웨어엔지니어', '데이터과학자', '백엔드전문가', '프론트엔드개발자', '모바일앱개발자',
  '시스템엔지니어', '네트워크관리자', 'DBA', '클라우드아키텍트', '보안전문가',
  '테크블로거', '오픈소스기여자', 'IT강사', '해커', '기술지원'
];

const generateDummyData = (numItems: number) => {
  const data = [];
  for (let i = 1; i <= numItems; i++) {
    const category = categories[Math.floor(Math.random() * categories.length)];
    const title = titles[Math.floor(Math.random() * titles.length)];
    const content = contents[Math.floor(Math.random() * contents.length)];
    const nickname = nicknames[Math.floor(Math.random() * nicknames.length)];
    const codeCategory = CodeCategories[Math.floor(Math.random() * CodeCategories.length)];
    const date = new Date().toISOString().split('T')[0];

    data.push({
      id: i,
      category: category,
      title: title,
      content: content,
      nickname: nickname,
      date: date,
      codeCategory: codeCategory
    });
  }
  return data;
};

export const dummyData = generateDummyData(200);


